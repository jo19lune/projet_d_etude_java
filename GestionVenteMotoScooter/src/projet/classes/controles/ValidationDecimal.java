package projet.classes.controles;

public class ValidationDecimal {

    /**
     * V√©rifie si une cha√Æne est un nombre d√©cimal valide et sup√©rieur √† 0.
     * @param input La valeur √† tester.
     * @param maxDecimals Nombre maximal de d√©cimales autoris√©es.
     * @return true si le nombre est valide et > 0, sinon false.
     */
    public static boolean isValidDecimal(String input, int maxDecimals) {
        if (input == null || input.trim().isEmpty()) {
            return true; // ‚úÖ Ne rien faire si le champ est vide
        }

        try {
            // V√©rification du format d√©cimal
            double number = Double.parseDouble(input);

            // üî• V√©rifie que la valeur est bien sup√©rieure √† 0
            if (number <= 0) {
                return false;
            }

            // V√©rification du nombre de d√©cimales
            String[] parts = input.split("\\.");
            if (parts.length == 2 && parts[1].length() > maxDecimals) {
                return false; // Trop de d√©cimales
            }

            return true; // Format correct et nombre valide
        } catch (NumberFormatException e) {
            return false; // Retourne false si la conversion √©choue
        }
    }
    
    /**
     * V√©rifie si une cha√Æne repr√©sente un nombre valide.
     * Ne fait rien si la cha√Æne est vide.
     * @param input La valeur √† tester.
     * @param strictMode true = v√©rifie si positif, false = accepte tous les nombres.
     * @return true si la valeur est valide ou vide, false sinon.
     */
    public static boolean isValidNumber(String input, boolean strictMode) {
        if (input == null || input.trim().isEmpty()) {
            return true; // ‚úÖ Ne rien faire si le champ est vide
        }

        try {
            double number = Double.parseDouble(input);

            // üî• V√©rifie si strictMode est activ√© (uniquement positif)
            if (strictMode && number <= 0) {
                return false;
            }

            return true; // ‚úÖ Format correct
        } catch (NumberFormatException e) {
            return false; // üö´ √âchec si la conversion en nombre √©choue
        }
    }
}
